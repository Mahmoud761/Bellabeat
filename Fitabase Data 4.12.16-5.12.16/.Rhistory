install.packages("palmerpenguins")
library("palmerpenguins")
summary(penguins)
View(penguins)
install.packages("tidyverse")
library("tidyverse")
library(lubridate)
library(ggplot2)
View(diamonds)
head()
head(diamonds)
library(tidyverse)
mutate(diamonds,carat_2=carat*100)
install.packages("her")
install.packages("here")
library(here)
install.packages("skimr")
library(skimr)
install.packages("janitor")
library(janitor)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
read_csv("data.csv")
library(palmerpenguins)
skim_without_charts(palmerpenguins)
install.packages("palmerpenguins")
install.packages("palmerpenguins")
skim_without_charts(penguins)
glimpse(penguins)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("dplyr")
penguins %>%
select(species)
head(penguins)
penguins %>%
select(species)
penguins%>%
select(species)
penguins%>%
select(-species)
penguins %>%
rename(island_new =island)
penguins %>%
rename_with(penguins, tolower)
rename_with(penguins, tolower)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length_mm = mean(bill_length_mm))
penguins %>% group_by (island) %>% drop_na() %>% summarize(max_bill_length_mm = max(bill_length_mm))
penguins %>%  group_by(species, island) %>%  drop_na() %>% summarize(max_bl= max(bill_length_mm), mean_bl = mean(bill_length_mm))
read_csv(GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings.csv)
read_csv(GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings.csv)
library(readr)
GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings <- read_csv("GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings.csv")
View(GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings)
View(GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings)
head(GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings)
hotel_bookings <- GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1_hotel_bookings
View(hotel_bookings)
hotel_bookings %>% group_by(hotel) %>% drop_na() %>% summarize(sum_c = Sum(is_canceled))
hotel_bookings %>% summarize(sum_c = Sum(is_canceled))
id <- c(1:3)
name <- c('mahmoud amin', 'ahmed ashour','dalia hasan')
employee <- data.frame(id,name)
View(employee)
separate(employee,name,into=c('first_name','last_name'), sep = ' ')
unite(employee,first_nam,last_name,into=c('name'), sep = ' ')
unite(employee,"name", first_nam,last_name, sep = ' ')
unite(employee,'name', first_nam,last_name, sep = ' ')
print(employee)
unite(employee,'name', first_nam,last_name, sep = ' ')
print(employee)
employee <- data.frame(id, first_name,last_name)
separate(employee,name,into=c('first_name','last_name'), sep = ' ')
print(employee)
install.packages('tmisc')
install.packages('Tmisc')
library(Tmisc)
data("quartet")
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),cor(x,y))
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),cor(x,y))
quartet %>%
group_by(set) %>%
summary(mean(x),sd(x),mean(y),cor(x,y))
quartet %>%
group_by(set)
quartet %>%
group_by(set)
library(dplyr)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),cor(x,y))
library(ggplot)
library(ggplot2)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method = lm,se=FALSE) + facet_wrap(-set)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
library(palmerpenguins)
library(ggplot2)
View(penguins)
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_wrap(species)
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_wrap(~species)
ggplot(data=penguins)+
geom_bar(mapping=aes(x=color,fill=island))+
facet_wrap(~island)
install.packages('daimonds')
install.packages('diamonds')
ggplot(data=penguins)+
geom_bar(mapping=aes(x=species,fill=island))+
facet_wrap(~island)
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_wrap(sex~species)
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_grid(sex~species)
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_grid(sex~species)+
labs(title = "palmerpengnins: flipper vs body by species")
plot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_grid(sex~species)+
labs(title = "palmerpengnins: flipper vs body by species",
caption = "data collection by Dr .gorman")+
annotate("text",x=190,y=4000,label="the chinstarp are large",color="green"
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_grid(sex~species)+
labs(title = "palmerpengnins: flipper vs body by species",
caption = "data collection by Dr .gorman")+
annotate("text",x=190,y=4000,label="the chinstarp are large",color="green")
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(aes(color=species))+
facet_grid(sex~species)+
labs(title = "palmerpengnins: flipper vs body by species",caption = "data collection by Dr .gorman")+
annotate("text",x=190,y=4000,label="the chinstarp are large",color="green")
ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point()+labs(title = "palmerpengnins: flipper vs body by species",caption = "data collection by Dr .gorman")+
annotate("text",x=190,y=4000,label="the chinstarp are large",color="green")
data_marged %>%
select(TotalDistance,TotalMinutesAsleep,TotalSteps,TotalTimeInBed,Calories,weekday,month,WeightPounds,BMI) %>%
summary()
data_marged %>%
dplyr:: select(TotalDistance,TotalMinutesAsleep,TotalSteps,TotalTimeInBed,Calories,weekday,month,WeightPounds,BMI) %>%
summary()
install.packages("tidyverse")
data_marged %>%
dplyr:: select(TotalDistance,TotalMinutesAsleep,TotalSteps,TotalTimeInBed,Calories,weekday,month,WeightPounds,BMI) %>%
summary()
install.packages("tidyverse")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("reader")
library(plotly)
library(tidyverse) #wrangle data
library(dplyr) #clean data
library(lubridate)  #wrangle date attributes
library(skimr) #get summary data
library(ggplot2) #visualize data
library(cowplot) #grid the plot
library(readr) #save csv
library(tidyr)
library(janitor)
path <- file.path("C:","Users","Lenovo","Documents","archive (1)","Fitabase Data 4.12.16-5.12.16")
setwd(path)
daily_activity <- read.csv("dailyActivity_merged.csv")
sleep_day <- read.csv("sleepDay_merged.csv")
weight <- read.csv("weightLogInfo_merged.csv")
hourly_steps <- read.csv("hourlySteps_merged.csv")
head(daily_activity)
head(sleep_day)
head(weight)
head(hourly_steps)
sum(is.na(daily_activity))
sum(is.na(sleep_day))
sum(is.na(weight))
sum(is.na(hourly_steps))
sum(duplicated(daily_activity))
sum(duplicated(sleep_day))
sum(duplicated(weight))
sum(duplicated(hourly_steps))
sleep_day <- sleep_day[!duplicated(sleep_day), ]
sum(duplicated(sleep_day))
daily_activity <- daily_activity %>%  mutate( weekday = weekdays(as.Date(ActivityDate,"%m/%d/%Y")))
hourly_steps$ActivityHour <- as.POSIXct(hourly_steps$ActivityHour,format="%m/%d/%Y %I:%M:%S %p")
hourly_steps$hour <- format(hourly_steps$ActivityHour,format=('%H'))
head(hourly_steps
merged1 <- merge(daily_activity,sleep_day,by = c("Id"),all= TRUE)
data_marged <- merge(merged1,weight,by = c("Id"),all = TRUE)
data_marged$weekday <- factor(data_marged$weekday, levels= c("Sunday","Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
View(hourly_steps)
View(hourly_steps)
merged1 <- merge(daily_activity,sleep_day,by = c("Id"),all= TRUE)
data_marged <- merge(merged1,weight,by = c("Id"),all = TRUE)
data_marged$weekday <- factor(data_marged$weekday, levels= c("Sunday","Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
write.csv(data_marged,"data_marged.csv")
sum(is.na(data_marged$Id))
sum(duplicated(data_marged$Id))
n_distinct(data_marged$Id
n_distinct(daily_activity$Id)
n_distinct(sleep_day$Id)
n_distinct(weight$Id)
n_distinct(daily_activity$Id)
weight %>%
filter(IsManualReport=="True") %>%
group_by(Id) %>%
summarise("Manual Weight Report"==n()) %>%
distinct()
sleep_day_new <- sleep_day %>% group_by(Id) %>%
summarise(avg_time_sleep= mean(TotalMinutesAsleep)) %>%
mutate(Categores=case_when(
avg_time_sleep < 300 ~ "unhealthy sleep",
avg_time_sleep >= 320 & avg_time_sleep <=  420 ~ "normal Sleeep",
avg_time_sleep > 420 ~ "healthy sleep"))
Steps_categores <- daily_activity %>% group_by(Id) %>%
summarise(avg_steps=mean(TotalSteps)) %>%
mutate(level_steps= case_when(
avg_steps < 5000 ~ "Sedentary",
avg_steps >=5000 & avg_steps < 10000 ~ "Needsimprovment",
avg_steps >=10000 & avg_steps < 12500 ~ "Active",
avg_steps >=12500 ~ "Highly active"))
data_marged %>%
dplyr:: select(TotalDistance,TotalMinutesAsleep,TotalSteps,TotalTimeInBed,Calories,weekday,month,WeightPounds,BMI) %>%
summary()
data_marged %>%
dplyr:: select(TotalDistance,TotalMinutesAsleep,TotalSteps,TotalTimeInBed,Calories,weekday,WeightPounds,BMI) %>%
summary()
data_marged %>%
dplyr:: select() %>%
summary()
View(daily_activity)
ggplot(data= daily_activity,aes(x=weekday,y=calories))+ggom(fill="blue")
ggplot(data= daily_activity,aes(x=weekday,y=calories))+geom_bar(fill="blue")
ggplot(data= daily_activity,aes(x=weekday,y=Calories))+geom_bar(fill="blue")
ggplot(data= daily_activity,aes(x=weekday,fill="blue"))+geom_bar(stat = Calories)
ggplot(data= daily_activity,aes(x=weekday))+geom_bar(stat = Calories)
ggplot(data= daily_activity,aes(x=weekday))+geom_bar(stat = sum())
ggplot(data= daily_activity,aes(x=weekday))+geom_bar()
data_marged$weekday <- factor(data_marged$weekday, levels= c("Sunday","Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
ggplot(data= data_marged,aes(x=weekday))+geom_bar()
ggplot(data= data_marged,aes(x=weekday, y=Calories))+geom_bar()
View(data_marged)
ggplot(data= data_marged,aes(x=weekday, y=Calories))+geom_bar(stat = "identity")
ggplot(data= hourly_steps,aes(x=hour, y=StepTotal))+geom_bar(stat = "identity")
ggplot(data= hourly_steps,aes(x=hour, y=StepTotal,fill=hour))+geom_bar(stat = "identity")
ggplot(data= hourly_steps,aes(x=hour, y=StepTotal,fill=hour))+geom_bar(stat = "identity")+ labs(title = "steps by hour")
View(sleep_day)
View(sleep_day_new)
View(sleep_day_new)
View(Steps_categores)
plot_ly(Steps_categores,labels= level_steps, value=avg_steps,type = 'pie')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie')
(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label')
(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent',title='steps')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent')+
layout(title= 'Users categories by steps')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent') %>%
layout(title= 'Users categories by steps')
Steps_categores <- daily_activity %>% group_by(Id) %>%
summarise(avg_steps=mean(TotalSteps)) %>%
mutate(level_steps= case_when(
avg_steps < 5000 ~ "Sedentary",
avg_steps >=5000 & avg_steps < 10000 ~ "Needs Improvment",
avg_steps >=10000 & avg_steps < 12500 ~ "Active",
avg_steps >=12500 ~ "Highly active"))
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent') %>%
layout(title= 'Users categories by steps')
View(daily_activity)
View(data_marged)
ggplot(data = daily_activity, aes(x=weekday,y=TotalSteps))+geom_bar(stat="identity")+labs(title= 'weeklyday steps')
sleep_day_new <- sleep_day %>% group_by(Id) %>%
summarise(avg_time_sleep= mean(TotalMinutesAsleep)) %>%
mutate(Categores=case_when(
avg_time_sleep < 300 ~ "unhealthy sleep",
avg_time_sleep >= 320 & avg_time_sleep <=  420 ~ "normal Sleep",
avg_time_sleep > 420 ~ "healthy sleep"))
sleep_day_new$Categores <- factor(sleep_day_new$Categores, levels= c("unhealthy sleep","normal Sleep","healthy sleep"))
plot_ly(sleep_day_new,labels= ~ healthy sleep, value= ~ avg_time_sleep,type = "pie", textposition = 'outside',textinfo = 'label+percent') %>%
layout(title='usere categories by hourly sleep')
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent') %>%
layout(title= 'Users categories by steps')
plot_ly(sleep_day_new,labels= ~ healthy sleep, value= ~ avg_time_sleep,type = "pie", textposition = 'outside',textinfo = 'label+percent') %>%
layout(title='usere categories by hourly sleep')
plot_ly(sleep_day_new,labels= ~ Categores, value= ~ avg_time_sleep,type = "pie", textposition = 'outside',textinfo = 'label+percent') %>%
layout(title='usere categories by hourly sleep')
ggplot(data= hourly_steps,aes(x=hour, y=StepTotal,fill=hour))+geom_bar(stat = "identity")+ labs(title = "steps by hour")
ggplot(data= hourly_steps,aes(x=hour, y=StepTotal,fill=hour))+geom_bar(stat = "identity")+ labs(title = "steps by hour")
plot_ly(Steps_categores,labels= ~level_steps, value=~avg_steps,type = 'pie', textposition = 'outside',textinfo = 'label+percent') %>%
layout(title= 'Users categories by steps')
ggplot(data=daily_activity,aes(x=TotalSteps,y=calories,color= weekday))+ geom_point()+stat_smooth()
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color= weekday))+ geom_point()+stat_smooth()
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color= weekday))+ geom_point()+stat_smooth(method = lm)
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories))+ geom_point()+stat_smooth(method = lm)
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'blue',high = 'green')
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color=TotalDistance))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'blue',high = 'green')
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color=TotalDistance))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'baby blue',high = 'green')
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color=TotalDistance))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'orang')
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color=TotalDistance))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'orange')
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color=LightActiveDistance))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'orange')
ggplot(data=daily_activity,aes(x=TotalSteps,y=Calories,color=LightActiveDistance))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
ggplot(data=data_marged,aes(x=TotalSteps,y=Calories,color=BMI))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
ggplot(data=data_marged,aes(x=TotalSteps,y=Calories,color=BMI))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
ggplot(data=data_marged,aes(x=TotalSteps,y=Calories,color=WeightKg))+ geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
data_marged$TotalMinutesActive <- sum(daily_activity$SedentaryMinutes, daily_activity$VeryActiveMinutes, daily_activity$FairlyActiveMinutes, daily_activity$LightlyActiveMinutes)
data_marged$TotalMinutesActive <- sum(data_marged$SedentaryMinutes, data_marged$VeryActiveMinutes, data_marged$FairlyActiveMinutes, data_marged$LightlyActiveMinutes)
data_marged <- select(data_marged,-c('TotalMinutesActive'))
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories)+geom_point()
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories)+geom_point()
head(data_marged)
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories, color=TotalMinutesAsleep)+geom_point()+stat_smooth(method = lm)
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories, color=TotalMinutesAsleep)+geom_point()+stat_smooth(method = lm)
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories, color=TotalMinutesAsleep)+geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories, color=TotalMinutesAsleep)+geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories, color=TotalMinutesAsleep)+geom_point()+stat_smooth(method = lm)+
scale_color_gradient(low = 'green',high = 'red')
ggplot(data=data_marged,aes(x=TotalMinutesAsleep,y=Calories)
